AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  get-weather

  Sample SAM Template for get-weather
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Parameters:
  WeatherDataApiKey:
    Type: String

Resources:
  GetWeatherFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      MemorySize: 512
      Architectures:
        - x86_64
      Environment:
        Variables:
          WEATHER_DATA_API_KEY: !Ref WeatherDataApiKey
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'events:PutEvents'
              Resource: '*' # You can restrict this to specific event buses if needed
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
          - app.ts

  GetWeatherFunctionSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: 'GetWeatherFunctionSchedule'
      ScheduleExpression: 'rate(1 minute)'
      FlexibleTimeWindow:
        Mode: 'OFF'
      Target:
        Arn: !GetAtt GetWeatherFunction.Arn
        RoleArn: !GetAtt GetWeatherFunctionScheduleRole.Arn

  GetWeatherFunctionScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetWeatherFunctionScheduleRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - !GetAtt GetWeatherFunction.Arn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  GetWeatherFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt GetWeatherFunction.Arn
  GetWeatherFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt GetWeatherFunctionRole.Arn
